quit
swap_mark
board.dup
continue
quit
self.children
self.next_mover_mark
evaluator
continue
quit
self
continue
s
evaluator
self.next_mover_mark
self.board.over?
self.board.over
self.board
self
quit
self
quit
mark
n
s
display move
quit
n
display move
mark
game.board
game
quit
possible_moves[0].winning_node?
possible_moves[0].prev_move_pos
possible_moves[0].prev_mov_pos
possible_moves[0]
possible_moves.length
possible_moves
quit
display self.children.any? {|child| child.losing_node?(evaluator)}
display self.children.all? {|child| child.losing_node?(evaluator)}
quit
display children
display self.children
display self
quit
n
display self
n
display children
quit
n
display self
quit
n
display self.board
display self.borad
quit
display self.board
quit
n
display self.board
quit
n
display self.board
quit
n
display self.board
quit
@board == board_in
@board
n
@board
self.board
board
board_in
quit
@next_mover_mark
n
@board
n
next_mover_mark
board
